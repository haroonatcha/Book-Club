x = 'Votes',
y = 'Rank') +
transition_time(Round) +
theme(legend.position = 'top',
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5,
family = 'serif'),
axis.line.y = element_line(color = 'black'),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
panel.background = element_rect(fill = NA),
panel.grid = element_blank())
return(animate(g, renderer = gifski_renderer(), rewind = FALSE,
nframes = max(complete$Round)*30 + 45, fps = 60,
end_pause = 45, start_pause = 15))
}  else {
g <- ggplot(data = complete) +
geom_vline(xintercept = nrow(complete) / 2,
color = 'grey70',
linetype = 'dashed') +
geom_rect(aes(xmin = 0, xmax = Votes,
ymin = Rank - 0.45, ymax = Rank + 0.45,
group = Option, fill = Option,
color = after_scale(clr_darken(fill, 0.3)))) +
geom_text(aes(x = 0, y = Rank,
label = Option),
hjust = 0,
family = 'serif') +
scale_x_continuous(expand = c(0,0),
limits = c(0, nrow(complete)),
breaks = seq(from = 0,
to = nrow(complete),
length.out = 5),
labels = percent(seq(from = 0,
to = 1,
by = 0.25))) +
labs(title = 'Round {as.integer(frame_time)}',
x = 'Votes',
y = 'Rank') +
facet_wrap(facets = Round) +
theme(legend.position = 'top',
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5,
family = 'serif'),
axis.line.y = element_line(color = 'black'),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
panel.background = element_rect(fill = NA),
panel.grid = element_blank())
return(g)
}
}
# Applying the functions --------------------------------------------------
#apply the functions to our actual vote
data <- rank_choice_data(data)
#looks like it worked
rank_choice_results(data)
#test the plotting function
plot_rounds(data, output = 'picture')
data
#test the plotting function
plot_rounds(data, output = 'gif')
#test the plotting function
plot_rounds(data, output = 'static')
plot_rounds <- function(data, output = 'gif') {
highest_vote_percent <- max(table(data[,1])) /nrow(data)
i <- 1
complete <- data.frame(matrix(nrow = 0,
ncol = 4))
colnames(complete) <- c('Option', 'Votes', 'Round', 'Rank')
while(highest_vote_percent < 0.5) {
rounds <- data.frame(table(data[,1]))
rounds$Round <- i
rounds <- rounds[order(rounds$Freq, decreasing = TRUE),]
rounds$Rank <- seq(from = nrow(rounds),
to = 1,
by = -1)
colnames(rounds) <- colnames(complete)
complete <- rbind(complete, rounds)
rows_to_update <- which(data[,1] == names(which.min(table(data[,1]))))
#remove their first preference and move up their second preference. Pad tails with 0's
data[rows_to_update,] <- cbind(data[rows_to_update,2:ncol(data)], NA)
#recalculate what # of the vote the highest vote getter got this time
highest_vote_percent <- max(table(data[,1])) / nrow(data)
i <- i + 1
}
if(highest_vote_percent > 0.5) {
rounds <- data.frame(table(data[,1]))
rounds$Round <- i
rounds <- rounds[order(rounds$Freq, decreasing = TRUE),]
rounds$Rank <- seq(from = nrow(rounds),
to = 1,
by = -1)
colnames(rounds) <- colnames(complete)
complete <- rbind(complete, rounds)
} else {
next
}
complete$Option <- paste0(str_wrap(gsub('\\.', ' ', complete$Option), 15), '\n')
if(output == 'gif') {
g <- ggplot(data = complete) +
geom_vline(xintercept = nrow(complete) / 2,
color = 'grey70',
linetype = 'dashed') +
geom_rect(aes(xmin = 0, xmax = Votes,
ymin = Rank - 0.45, ymax = Rank + 0.45,
group = Option, fill = Option,
color = after_scale(clr_darken(fill, 0.3)))) +
geom_text(aes(x = 0, y = Rank,
label = Option),
hjust = 0,
family = 'serif') +
scale_x_continuous(expand = c(0,0),
limits = c(0, nrow(complete)),
breaks = seq(from = 0,
to = nrow(complete),
length.out = 5),
labels = percent(seq(from = 0,
to = 1,
by = 0.25))) +
labs(title = 'Round {as.integer(frame_time)}',
x = 'Votes',
y = 'Rank') +
transition_time(Round) +
theme(legend.position = 'top',
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5,
family = 'serif'),
axis.line.y = element_line(color = 'black'),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
panel.background = element_rect(fill = NA),
panel.grid = element_blank())
return(animate(g, renderer = gifski_renderer(), rewind = FALSE,
nframes = max(complete$Round)*30 + 45, fps = 60,
end_pause = 45, start_pause = 15))
}  else {
g <- ggplot(data = complete) +
geom_vline(xintercept = nrow(complete) / 2,
color = 'grey70',
linetype = 'dashed') +
geom_rect(aes(xmin = 0, xmax = Votes,
ymin = Rank - 0.45, ymax = Rank + 0.45,
group = Option, fill = Option,
color = after_scale(clr_darken(fill, 0.3)))) +
geom_text(aes(x = 0, y = Rank,
label = Option),
hjust = 0,
family = 'serif') +
scale_x_continuous(expand = c(0,0),
limits = c(0, nrow(complete)),
breaks = seq(from = 0,
to = nrow(complete),
length.out = 5),
labels = percent(seq(from = 0,
to = 1,
by = 0.25))) +
labs(title = 'Round {as.integer(frame_time)}',
x = 'Votes',
y = 'Rank') +
facet_wrap(facets = 'Round') +
theme(legend.position = 'top',
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5,
family = 'serif'),
axis.line.y = element_line(color = 'black'),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
panel.background = element_rect(fill = NA),
panel.grid = element_blank())
return(g)
}
}
#test the plotting function
plot_rounds(data, output = 'static')
plot_rounds <- function(data, output = 'gif') {
highest_vote_percent <- max(table(data[,1])) /nrow(data)
i <- 1
complete <- data.frame(matrix(nrow = 0,
ncol = 4))
colnames(complete) <- c('Option', 'Votes', 'Round', 'Rank')
while(highest_vote_percent < 0.5) {
rounds <- data.frame(table(data[,1]))
rounds$Round <- i
rounds <- rounds[order(rounds$Freq, decreasing = TRUE),]
rounds$Rank <- seq(from = nrow(rounds),
to = 1,
by = -1)
colnames(rounds) <- colnames(complete)
complete <- rbind(complete, rounds)
rows_to_update <- which(data[,1] == names(which.min(table(data[,1]))))
#remove their first preference and move up their second preference. Pad tails with 0's
data[rows_to_update,] <- cbind(data[rows_to_update,2:ncol(data)], NA)
#recalculate what # of the vote the highest vote getter got this time
highest_vote_percent <- max(table(data[,1])) / nrow(data)
i <- i + 1
}
if(highest_vote_percent > 0.5) {
rounds <- data.frame(table(data[,1]))
rounds$Round <- i
rounds <- rounds[order(rounds$Freq, decreasing = TRUE),]
rounds$Rank <- seq(from = nrow(rounds),
to = 1,
by = -1)
colnames(rounds) <- colnames(complete)
complete <- rbind(complete, rounds)
} else {
next
}
complete$Option <- paste0(str_wrap(gsub('\\.', ' ', complete$Option), 15), '\n')
if(output == 'gif') {
g <- ggplot(data = complete) +
geom_vline(xintercept = nrow(complete) / 2,
color = 'grey70',
linetype = 'dashed') +
geom_rect(aes(xmin = 0, xmax = Votes,
ymin = Rank - 0.45, ymax = Rank + 0.45,
group = Option, fill = Option,
color = after_scale(clr_darken(fill, 0.3)))) +
geom_text(aes(x = 0, y = Rank,
label = Option),
hjust = 0,
family = 'serif') +
scale_x_continuous(expand = c(0,0),
limits = c(0, nrow(complete)),
breaks = seq(from = 0,
to = nrow(complete),
length.out = 5),
labels = percent(seq(from = 0,
to = 1,
by = 0.25))) +
labs(title = 'Round {as.integer(frame_time)}',
x = 'Votes',
y = 'Rank') +
transition_time(Round) +
theme(legend.position = 'top',
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5,
family = 'serif'),
axis.line.y = element_line(color = 'black'),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
panel.background = element_rect(fill = NA),
panel.grid = element_blank())
return(animate(g, renderer = gifski_renderer(), rewind = FALSE,
nframes = max(complete$Round)*30 + 45, fps = 60,
end_pause = 45, start_pause = 15))
}  else {
g <- ggplot(data = complete) +
geom_vline(xintercept = nrow(complete) / 2,
color = 'grey70',
linetype = 'dashed') +
geom_rect(aes(xmin = 0, xmax = Votes,
ymin = Rank - 0.45, ymax = Rank + 0.45,
group = Option, fill = Option,
color = after_scale(clr_darken(fill, 0.3)))) +
geom_text(aes(x = 0, y = Rank,
label = Option),
hjust = 0,
family = 'serif') +
scale_x_continuous(expand = c(0,0),
limits = c(0, nrow(complete)),
breaks = seq(from = 0,
to = nrow(complete),
length.out = 5),
labels = percent(seq(from = 0,
to = 1,
by = 0.25))) +
labs(title = 'Book Club Voting',
x = 'Votes',
y = 'Rank') +
facet_wrap(facets = 'Round') +
theme(legend.position = 'top',
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5,
family = 'serif'),
axis.line.y = element_line(color = 'black'),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
panel.background = element_rect(fill = NA),
panel.grid = element_blank())
return(g)
}
}
#test the plotting function
plot_rounds(data, output = 'static')
plot_rounds <- function(data, output = 'gif') {
highest_vote_percent <- max(table(data[,1])) /nrow(data)
i <- 1
complete <- data.frame(matrix(nrow = 0,
ncol = 4))
colnames(complete) <- c('Option', 'Votes', 'Round', 'Rank')
while(highest_vote_percent < 0.5) {
rounds <- data.frame(table(data[,1]))
rounds$Round <- i
rounds <- rounds[order(rounds$Freq, decreasing = TRUE),]
rounds$Rank <- seq(from = nrow(rounds),
to = 1,
by = -1)
colnames(rounds) <- colnames(complete)
complete <- rbind(complete, rounds)
rows_to_update <- which(data[,1] == names(which.min(table(data[,1]))))
#remove their first preference and move up their second preference. Pad tails with 0's
data[rows_to_update,] <- cbind(data[rows_to_update,2:ncol(data)], NA)
#recalculate what # of the vote the highest vote getter got this time
highest_vote_percent <- max(table(data[,1])) / nrow(data)
i <- i + 1
}
if(highest_vote_percent > 0.5) {
rounds <- data.frame(table(data[,1]))
rounds$Round <- i
rounds <- rounds[order(rounds$Freq, decreasing = TRUE),]
rounds$Rank <- seq(from = nrow(rounds),
to = 1,
by = -1)
colnames(rounds) <- colnames(complete)
complete <- rbind(complete, rounds)
} else {
next
}
complete$Option <- paste0(str_wrap(gsub('\\.', ' ', complete$Option), 15), '\n')
if(output == 'gif') {
g <- ggplot(data = complete) +
geom_vline(xintercept = nrow(complete) / 2,
color = 'grey70',
linetype = 'dashed') +
geom_rect(aes(xmin = 0, xmax = Votes,
ymin = Rank - 0.45, ymax = Rank + 0.45,
group = Option, fill = Option,
color = after_scale(clr_darken(fill, 0.3)))) +
geom_text(aes(x = 0, y = Rank,
label = Option),
hjust = 0,
family = 'serif') +
scale_x_continuous(expand = c(0,0),
limits = c(0, nrow(complete)),
breaks = seq(from = 0,
to = nrow(complete),
length.out = 5),
labels = percent(seq(from = 0,
to = 1,
by = 0.25))) +
labs(title = 'Round {as.integer(frame_time)}',
x = 'Votes',
y = 'Rank') +
transition_time(Round) +
theme(legend.position = 'top',
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5,
family = 'serif'),
axis.line.y = element_line(color = 'black'),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
panel.background = element_rect(fill = NA),
panel.grid = element_blank())
return(animate(g, renderer = gifski_renderer(), rewind = FALSE,
nframes = max(complete$Round)*30 + 45, fps = 60,
end_pause = 45, start_pause = 15))
}  else {
g <- ggplot(data = complete) +
geom_vline(xintercept = nrow(complete) / 2,
color = 'grey70',
linetype = 'dashed') +
geom_rect(aes(xmin = 0, xmax = Votes,
ymin = Rank - 0.45, ymax = Rank + 0.45,
group = Option, fill = Option,
color = after_scale(clr_darken(fill, 0.3)))) +
geom_text(aes(x = 0, y = Rank,
label = Option),
hjust = 0,
family = 'serif') +
scale_x_continuous(expand = c(0,0),
limits = c(0, nrow(complete)),
breaks = seq(from = 0,
to = nrow(complete),
length.out = 5),
labels = percent(seq(from = 0,
to = 1,
by = 0.25))) +
labs(title = 'Book Club Voting by Round',
x = 'Votes',
y = 'Rank') +
facet_wrap(facets = 'Round') +
theme(legend.position = 'top',
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5,
family = 'serif'),
axis.line.y = element_line(color = 'black'),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
panel.background = element_rect(fill = NA),
panel.grid = element_blank())
return(g)
}
}
#test the plotting function
plot_rounds(data, output = 'static')
plot_rounds <- function(data, output = 'gif') {
highest_vote_percent <- max(table(data[,1])) /nrow(data)
i <- 1
complete <- data.frame(matrix(nrow = 0,
ncol = 4))
colnames(complete) <- c('Option', 'Votes', 'Round', 'Rank')
while(highest_vote_percent < 0.5) {
rounds <- data.frame(table(data[,1]))
rounds$Round <- i
rounds <- rounds[order(rounds$Freq, decreasing = TRUE),]
rounds$Rank <- seq(from = nrow(rounds),
to = 1,
by = -1)
colnames(rounds) <- colnames(complete)
complete <- rbind(complete, rounds)
rows_to_update <- which(data[,1] == names(which.min(table(data[,1]))))
#remove their first preference and move up their second preference. Pad tails with 0's
data[rows_to_update,] <- cbind(data[rows_to_update,2:ncol(data)], NA)
#recalculate what # of the vote the highest vote getter got this time
highest_vote_percent <- max(table(data[,1])) / nrow(data)
i <- i + 1
}
if(highest_vote_percent > 0.5) {
rounds <- data.frame(table(data[,1]))
rounds$Round <- i
rounds <- rounds[order(rounds$Freq, decreasing = TRUE),]
rounds$Rank <- seq(from = nrow(rounds),
to = 1,
by = -1)
colnames(rounds) <- colnames(complete)
complete <- rbind(complete, rounds)
} else {
next
}
complete$Option <- paste0(str_wrap(gsub('\\.', ' ', complete$Option), 15), '\n')
if(output == 'gif') {
g <- ggplot(data = complete) +
geom_vline(xintercept = nrow(complete) / 2,
color = 'grey70') +
geom_rect(aes(xmin = 0, xmax = Votes,
ymin = Rank - 0.45, ymax = Rank + 0.45,
group = Option, fill = Option,
color = after_scale(clr_darken(fill, 0.3)))) +
geom_text(aes(x = 0, y = Rank,
label = Option),
hjust = 0,
family = 'serif') +
scale_x_continuous(expand = c(0,0),
limits = c(0, nrow(complete)),
breaks = seq(from = 0,
to = nrow(complete),
length.out = 5),
labels = percent(seq(from = 0,
to = 1,
by = 0.25))) +
labs(title = 'Round {as.integer(frame_time)}',
x = 'Votes',
y = 'Rank') +
transition_time(Round) +
theme(legend.position = 'top',
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5,
family = 'serif'),
axis.line.y = element_line(color = 'black'),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
panel.background = element_rect(fill = NA),
panel.grid = element_blank())
return(animate(g, renderer = gifski_renderer(), rewind = FALSE,
nframes = max(complete$Round)*30 + 45, fps = 60,
end_pause = 45, start_pause = 15))
}  else {
g <- ggplot(data = complete) +
geom_vline(xintercept = nrow(complete) / 2,
color = 'grey70') +
geom_rect(aes(xmin = 0, xmax = Votes,
ymin = Rank - 0.45, ymax = Rank + 0.45,
group = Option, fill = Option,
color = after_scale(clr_darken(fill, 0.3)))) +
geom_text(aes(x = 0, y = Rank,
label = Option),
hjust = 0,
family = 'serif') +
scale_x_continuous(expand = c(0,0),
limits = c(0, nrow(complete)),
breaks = seq(from = 0,
to = nrow(complete),
length.out = 5),
labels = percent(seq(from = 0,
to = 1,
by = 0.25))) +
labs(title = 'Book Club Voting by Round',
x = 'Votes',
y = 'Rank') +
facet_wrap(facets = 'Round') +
theme(legend.position = 'top',
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5,
family = 'serif'),
axis.line.y = element_line(color = 'black'),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
panel.background = element_rect(fill = NA),
panel.grid = element_blank())
return(g)
}
}
#test the plotting function
plot_rounds(data, output = 'static')
#test the plotting function
plot_rounds(data, output = 'gif')
anim_save('voting gif.gif')
anim_save('voting gif.gif', animation = last_animation())
#test the plotting function
plot_rounds(data, output = 'static')
